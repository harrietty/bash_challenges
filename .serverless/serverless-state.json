{
  "service": {
    "service": "bashChallenges",
    "serviceObject": {
      "name": "bashChallenges"
    },
    "provider": {
      "stage": "dev",
      "region": "eu-west-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "BashChallengesMainHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/bashChallengesAPI"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "bashChallenges",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/bashChallengesAPI:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/bashChallengesAPI:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "bashChallenges",
                    "dev",
                    "eu-west-1",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "BashChallengesMainHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/bashChallenges/dev/1545074177600-2018-12-17T19:16:17.600Z/bashChallenges.zip"
              },
              "FunctionName": "bashChallengesAPI",
              "Handler": "index.handler",
              "MemorySize": 512,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Description": "Provides an API to Learn Bash website"
            },
            "DependsOn": [
              "BashChallengesMainHandlerLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "BashChallengesMainHandlerLambdaVersion41qyq3yIAyqPmjDsnMlbcJmPsaOp5eRqMRFWDBsje8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "BashChallengesMainHandlerLambdaFunction"
              },
              "CodeSha256": "41qyq3yIAyqPmjDsnMlbcJmPsaOp5eRqMRFWDBsje/8=",
              "Description": "Provides an API to Learn Bash website"
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-bashChallenges"
            }
          },
          "ApiGatewayResourceChallenges": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "challenges",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodChallengesOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceChallenges"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodChallengesGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceChallenges"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "BashChallengesMainHandlerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1545074177609": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodChallengesGet"
            ]
          },
          "BashChallengesMainHandlerLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "BashChallengesMainHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "bashChallengesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "bash_challenges",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "bashChallengesAdditionalFilesBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "bash-challenges-files",
              "CorsConfiguration": {
                "CorsRules": [
                  {
                    "AllowedOrigins": [
                      "*"
                    ],
                    "AllowedHeaders": [
                      "*"
                    ],
                    "AllowedMethods": [
                      "GET",
                      "HEAD"
                    ]
                  }
                ]
              }
            }
          },
          "bashChallengesS3BucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "bashChallengesAdditionalFilesBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": [
                      "s3:GetObject"
                    ],
                    "Effect": "Allow",
                    "Resource": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "bashChallengesAdditionalFilesBucket"
                          },
                          "/*"
                        ]
                      ]
                    },
                    "Principal": "*"
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "BashChallengesMainHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "BashChallengesMainHandlerLambdaVersion41qyq3yIAyqPmjDsnMlbcJmPsaOp5eRqMRFWDBsje8"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.eu-west-1.amazonaws.com/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "functions": {
      "bashChallengesMainHandler": {
        "handler": "index.handler",
        "name": "bashChallengesAPI",
        "description": "Provides an API to Learn Bash website",
        "runtime": "nodejs8.10",
        "memorySize": 512,
        "events": [
          {
            "http": {
              "path": "challenges",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {},
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "bashChallengesTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "bash_challenges",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        },
        "bashChallengesAdditionalFilesBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "bash-challenges-files",
            "CorsConfiguration": {
              "CorsRules": [
                {
                  "AllowedOrigins": [
                    "*"
                  ],
                  "AllowedHeaders": [
                    "*"
                  ],
                  "AllowedMethods": [
                    "GET",
                    "HEAD"
                  ]
                }
              ]
            }
          }
        },
        "bashChallengesS3BucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": {
              "Ref": "bashChallengesAdditionalFilesBucket"
            },
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "s3:GetObject"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:s3:::",
                        {
                          "Ref": "bashChallengesAdditionalFilesBucket"
                        },
                        "/*"
                      ]
                    ]
                  },
                  "Principal": "*"
                }
              ]
            }
          }
        }
      },
      "Outputs": {}
    },
    "artifact": "/Users/kodkodcat/projects/learn_bash_site/bash_challenges/.serverless/bashChallenges.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/bashChallenges/dev/1545074177600-2018-12-17T19:16:17.600Z",
    "artifact": "bashChallenges.zip"
  }
}